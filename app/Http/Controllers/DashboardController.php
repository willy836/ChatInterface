<?php

namespace App\Http\Controllers;

use App\Http\Requests\ChatGeneratorRequest;
use App\Models\ChatHistory;
use App\Models\Personality;
use Illuminate\Http\Request;
use OpenAI\Laravel\Facades\OpenAI;
use Illuminate\Support\Facades\Auth;

class DashboardController extends Controller
{
    public function index(){
        $chatHistory = ChatHistory::where('user_id', Auth::user()->id)->latest()->filter(request('search'))->get();
        return view('dashboard', ['chatHistory' => $chatHistory]);
    }

    public function chatGenerator(ChatGeneratorRequest $request){
        $userId = Auth::user()->id;
        $validatedUserInput = $request->validated();

        // Save user input to db
        $chat = ChatHistory::create([
            'user_id'=> $userId,
            'user_input' => $validatedUserInput['chat'],
            'typing' => true
        ]);

        $personality = $request->input('personality');
        session(['personality' => $personality]);
        
        $prompts = [
            'formal' => "Write a formal reply about" . $validatedUserInput['chat'] . "\n",
            'friendly' => "Write a friendly reply about" . $validatedUserInput['chat'] . "\n",
            'humorous' => "Write a humorous reply about" . $validatedUserInput['chat'] . "\n",
        ];

        // Select propmpt based on user's choice
        $prompt = $prompts[$personality] ?? "Write a chat reply about" . $validatedUserInput['chat'] . "\n";

        // Response generated by AI
        $result = OpenAI::completions()->create([
            'model' => 'text-davinci-003',
            'prompt' => $prompt,
            'max_tokens' => 500,
        ]);

        // Update chat
        $chat->update([
            'typing' => false,
            'ai_response' => $result['choices'][0]['text']
        ]);

        $chatHistory = ChatHistory::where('user_id', $userId)->latest()->filter(request('search'))->get();
        $latestChat = ChatHistory::where('user_id', $userId)->latest()->filter(request('search'))->first();
        

        return view('dashboard', [ 
            'result' => $result['choices'][0]['text'], 
            'chatHistory' => $chatHistory, 
            'latestChat' => $latestChat 
        ]);
    }

    public function searchHistory(){
        $chatHistory = ChatHistory::where('user_id', Auth::user()->id)->latest()->filter(request('search'))->get();
        return view('dashboard', ['chatHistory' => $chatHistory]);
    }

    public function selectPersonality(){
        $personalities = Personality::all();
        return view('dashboard', ['personalities' => $personalities]);
    }
}
